给定一个整数数组 nums ，找到一个具有最大和的连续子数组（子数组最少包含一个元素），返回其最大和。
示例:
输入: [-2,1,-3,4,-1,2,1,-5,4],
输出: 6
解释: 连续子数组 [4,-1,2,1] 的和最大，为 6。

对于一个长度为n的数组A而言，从A[0] 到 A[j] 是一个子数组（j<n），那么以A[j]结尾的子数组之最大和，要么是 A[j]， 
要么是 max(A[i]~A[j-1])+A[j] ，其中0 ≤ i ≤ j-1。

public static int maxSum(int[] nums){
	int thisSum=0;
	int maxSum =0;
	
	for(int i=0;i<nums.length;i++){
		thisSum += nums[i];
		if(maxSum <thisSum){
			maxSum =thisSum;
		}
		if(thisSum <0){
			thisSum =0;
		}
	}
	return maxSum;
}