给定一个二叉树，找出其最小深度。
最小深度是从根节点到最近叶子节点的最短路径上的节点数量。
说明: 叶子节点是指没有子节点的节点。  

有个值得注意的用例[1,2] ，输出的minDepth应该为2，而不是1.  因为是到叶子结点，结点1不是叶子结点.

class Solution {
    public int minDepth(TreeNode root) {
        int min =Integer.MAX_VALUE;
        if(root ==null) return 0;  //为null结点时返回0
        if ((root.left == null) && (root.right == null)) {return 1;}  //当为叶子结点时，返回1.  因为是到叶子结点的节点数
        else{
            if(root.left !=null){
                min = Math.min(minDepth(root.left),min); //左节点的最小深度
            }
            if(root.right != null){
                min = Math.min(minDepth(root.right),min);
            }
        }
        return min+1;  //左右结点最小的深度再加上根节点。
    }
}