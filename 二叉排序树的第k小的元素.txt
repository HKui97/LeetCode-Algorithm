给定一个二叉搜索树，查找其中第 k 个最小的元素。
说明：
你可以假设 k 总是有效的，1 ≤ k ≤ 二叉搜索树元素个数。
输入: root = [5,3,6,2,4,null,null,1], k = 3
       5
      / \
     3   6
    / \
   2   4
  /
 1
输出: 3

class Solution {
    private int res = Integer.MAX_VALUE, count;
    public int kthSmallest(TreeNode root, int k) {
        count = k;
        inorder(root);
        return res;
    }
    private void inorder(TreeNode root) {
        if(root != null) {
            inorder(root.left);
            if(res != Integer.MAX_VALUE) return;  //每次先判断res是否变化，变化则直接退出递归，省了count的判断.
            if(--count == 0) res = root.val;
            inorder(root.right);
        }
    }
}
