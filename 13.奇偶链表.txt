给定一个单链表，把所有的奇数节点和偶数节点分别排在一起。请注意，这里的奇数节点和偶数节点指的是节点编号的奇偶性，而不是节点的值的奇偶性。

请尝试使用原地算法完成。你的算法的空间复杂度应为 O(1)，时间复杂度应为 O(n)

示例 :
输入: 2->1->3->5->6->4->7->NULL 
输出: 2->3->6->7->1->5->4->NULL

奇的后面是偶，偶的后面是奇


class Solution {
    public ListNode oddEvenList(ListNode head) {
        if(head == null || head.next == null) 
            return head;
        //奇偶结点交替更改
        ListNode or = head;  //奇链表的尾结点
        ListNode eh = head.next; //偶链表的头结点
        ListNode er = eh;//偶链表的尾结点
        
        while(or.next !=null &&er.next !=null){
            or.next=er.next;
            or = or.next;
            er.next =or.next;
            er = er.next;
        }
        or.next =eh;
        return head;
    }

}