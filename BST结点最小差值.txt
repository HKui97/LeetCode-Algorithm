给定一个二叉搜索树的根结点 root, 返回树中任意两节点的差的最小值。

如：给定的树 [4,2,6,1,3,null,null] 可表示为下图:

          4
        /   \
      2      6
     / \    
    1   3  

最小的差值是 1, 它是节点1和节点2的差值, 也是节点3和节点2的差值。


class Solution {
    private TreeNode pre =null;
    private int res =Integer.MAX_VALUE;
    public int minDiffInBST(TreeNode root) {
        dfs(root);
        return res;
    }
    
    public void dfs(TreeNode root){
        if(root ==null) return;
        dfs(root.left);
        if(pre !=null){
            res = Math.min(root.val-pre.val,res);
        }
        pre = root;
        dfs(root.right);
    }
}