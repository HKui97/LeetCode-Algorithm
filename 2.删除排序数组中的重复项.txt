题目：
给定一个排序数组，你需要在原地删除重复出现的元素，使得每个元素只出现一次，返回移除后数组的新长度。
不要使用额外的数组空间，你必须在原地修改输入数组并在使用 O(1) 额外空间的条件下完成。

示例 ：
给定 nums = [0,0,1,1,1,2,2,3,3,4],
函数应该返回新的长度 5, 并且原数组 nums 的前五个元素被修改为0, 1, 2, 3, 4。
你不需要考虑数组中超出新长度后面的元素。

快慢指针的思想,即定义两个指针slow，fast。
遍历数组，如果nums[slow]==nums[fast]，则fast++。如果nums[fast] != nums[slow]，则slow++，并将nums[fast]的值赋给nums[slow]。

class Solution{
	public int remove(int[] nums){  //C语言要多一个形参 int length
		if(nums.length ==0) return 0;
		int slow=0;
		for(int fast =1;fast<nums.length;fast++){
			if(nums[fast] !=nums[slow]){
				slow++;
				nums[slow] =nums[fast];
			}
		}
		return slow+1  ;
	}
}